<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

	<!-- Realm实现 -->
	<bean id="userRealm" class="com.jiantong.shiro.realm.UserRealm">
		<property name="credentialsMatcher" ref="credentialsMatcher" />
		<property name="cachingEnabled" value="false" />
		<!-- 启用身份验证缓存，即缓存AuthenticationInfo信息，默认false -->
		<property name="authenticationCachingEnabled" value="true" />
		<!-- 缓存认证AuthenticationInfo信息的缓存名称 -->
		<property name="authenticationCacheName" value="authenticationCache" />
		<!-- 启用授权缓存，即缓存AuthorizationInfo信息，默认false -->
		<property name="authorizationCachingEnabled" value="true" />
		<!-- 缓存授权AuthorizationInfo信息的缓存名称 -->
		<property name="authorizationCacheName" value="authorizationCache" />
	</bean>
	<!-- 缓存管理器 -->
	<bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
		<property name="cacheManagerConfigFile" value="classpath:ehcache/ehcache.xml" />
	</bean>
	<!-- 凭证匹配器 -->
	<bean id="credentialsMatcher" class="com.jiantong.shiro.credentials.RetryLimitHashedCredentialsMatcher">
		<constructor-arg ref="cacheManager"/>
        <property name="hashAlgorithmName" value="md5"/>
        <property name="hashIterations" value="2"/>
        <property name="storedCredentialsHexEncoded" value="true"/>
	</bean>
	<!-- 会话ID生成器 -->
	<bean id="sessionIdGenerator" class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator" />

	<!-- 会话Cookie模板 -->
	<bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
		<constructor-arg value="sid" />
		<property name="httpOnly" value="true" /><!-- 有助于减少跨站点脚本攻击 -->
		<property name="maxAge" value="-1" /><!-- 关闭浏览器时过期cookie -->
	</bean>
	<!-- 会话DAO 用于会话的CRUD -->
	<bean id="sessionDAO"
		class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO">
		<!-- 设置Session缓存名字，默认就是shiro-activeSessionCache -->
		<property name="activeSessionsCacheName" value="shiro-activeSessionCache" />
		<property name="sessionIdGenerator" ref="sessionIdGenerator" />
	</bean>

	<!-- 会话验证调度器 -->
	<!-- <bean id="sessionValidationScheduler" class="org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler"> -->
	<bean id="sessionValidationScheduler"
		class="com.jiantong.shiro.quartz.QuartzSessionValidationScheduler">
		<!--设置调度时间间隔 半小时 默认值为1小时 -->
		<property name="sessionValidationInterval" value="1800000" />
		<property name="sessionManager" ref="sessionManager" />
	</bean>

	<!-- 会话管理器 -->
	<bean id="sessionManager"
		class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
		<!-- 设置全局会话超时时间 半小时 -->
		<property name="globalSessionTimeout" value="1800000" />
		<!-- 删除失效的session -->
		<property name="deleteInvalidSessions" value="true" />
		<!-- 是否开启会话验证器 默认开启 -->
		<property name="sessionValidationSchedulerEnabled" value="true" />
		<!-- 设置会话调度器 -->
		<property name="sessionValidationScheduler" ref="sessionValidationScheduler" />
		<property name="sessionDAO" ref="sessionDAO" />
		<!-- 是否启用Session Id Cookie,默认是启动；如果是禁用则默认使用servlet容器的 JSESSIONID -->
		<property name="sessionIdCookieEnabled" value="true" />
		<property name="sessionIdCookie" ref="sessionIdCookie" />
	</bean>

	<!-- 记住我cookie -->
	<bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
		<!-- rememberMe是cookie的名字 -->
		<constructor-arg value="rememberMe" />
		<property name="httpOnly" value="true" />
		<!-- 记住我cookie生效时间30天 maxAge=-1表示浏览器关闭时失效此 Cookie -->
		<property name="maxAge" value="2592000" />
	</bean>

	<!-- rememberMe管理器 -->
	<bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
		<!-- rememberMe cookie加密的密钥 建议每个项目都不一样 默认AES算法 密钥长度（128 256 512 位） -->
		<!-- cipherKey是加密rememberMe Cookie的密钥；默认AES算法 -->
		<property name="cipherKey"
			value="#{T(org.apache.shiro.codec.Base64).decode('4AvVhmFLUs0KTA3Kprsdag==')}" />
		<property name="cookie" ref="rememberMeCookie" />
	</bean>

	<!-- 安全管理器 -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="userRealm" />
		<!-- 注入缓存管理器 -->
		<property name="cacheManager" ref="cacheManager" />
		<!-- 注入缓存管理器 -->
		<property name="sessionManager" ref="sessionManager" />
		<!-- 记住我 -->
		<property name="rememberMeManager" ref="rememberMeManager" />
	</bean>

	<!-- 基于Form表单的身份验证过滤器 -->
	<bean id="formAuthenticationFilter"
		class="com.jiantong.shiro.filter.CustomFormAuthenticationFilter">
		<!-- 指定登录表单提交的用户名参数名 -->
		<property name="usernameParam" value="username" />
		<!-- 指定登录表单提交的密码参数名 -->
		<property name="passwordParam" value="password" />
		<property name="rememberMeParam" value="rememberMe" />
		<!--指定登录成功后重定向的默认地址（默认是“/”）（如果有上一个地址会自动重定向到该地址） -->
		<property name="successUrl" value="/globalMonitoring" />
		<!-- <property name="failureKeyAttribute" value="shiroLoginFailure" /> 
			failureKeyAttribute指定登录失败时的 request属性 key（默认 shiroLoginFailure） -->
		<!-- 指定身份验证的登录表单 -->
		<property name="loginUrl" value="/login" />
	</bean>

	<!-- 验证码 -->
	<bean id="jCaptchaValidateFilter" class="com.jiantong.shiro.jcaptcha.JCaptchaValidateFilter">
		<!-- 开启验证码支持 -->
		<property name="jcaptchaEbabled" value="true" />
		<!-- 前台提交的验证码参数名 -->
		<property name="jcaptchaParam" value="jcaptchaCode" />
		<!-- 验证码验证失败后存储到的属性名 -->
		<property name="failureKeyAttribute" value="shiroLoginFailure" />
	</bean>

	<!-- 并发登录控制 -->
	<bean id="kickoutSessionControlFilter" class="com.jiantong.shiro.filter.KickoutSessionControlFilter">
		<!-- 用于保存用户—会话之间的关系的 -->
		<property name="cacheManager" ref="cacheManager" />
		<!-- 用于根据会话ID，获取会话进行踢出操作的 -->
		<property name="sessionManager" ref="sessionManager" />
		<!-- 是否踢出后来登录的，默认是false；即后者登录的用户踢出前者登录的用户 -->
		<property name="kickoutAfter" value="false" />
		<!-- 比如 2 的意思是同一个用户允许最多同时两个人登录 -->
		<property name="maxSession" value="1" />
		<!-- 被踢出后重定向到的地址 -->
		<property name="kickoutUrl" value="/login?kickout=1" />
	</bean>

	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
		<property name="loginUrl" value="/login" />
		<property name="filters">
			<util:map>
				<entry key="authc" value-ref="formAuthenticationFilter" />
				<entry key="kickout" value-ref="kickoutSessionControlFilter" />
				<entry key="jCaptchaValidate" value-ref="jCaptchaValidateFilter" />
			</util:map>
		</property>
		<!-- 过虑器链定义，从上向下顺序执行，一般将/**放在最下边 -->
		<property name="filterChainDefinitions">
			<value>
				/admin/login = jCaptchaValidate,authc
				/admin/logout = logout
				/admin/jcaptcha* = anon
				/css/** = anon
				/img/** = anon
				/js/** = anon
				/** = user,kickout
			</value>
		</property>
	</bean>

	<!-- Shiro生命周期处理器 -->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />
</beans>